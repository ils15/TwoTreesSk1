# SK1_2.23007221_fluidd

# This file contains common pin mappings for TWO TREES T1
# boards. To use this config, the firmware should be compiled for the
# stm32f407. When running "make menuconfig", select the 48KiB
# bootloader, and enable "Serial for communication" and select the "on USART1 PA10/PA9"

# The "make flash" command does not work on the TWO TREES T1. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "mks_skipr.bin" on an SD card and then restart the
# TWO TREES T1 with that SD card.
# This file contains common pin mappings for TWO TREES T1
# boards. To use this config, the firmware should be compiled for the
# stm32f407. When running "make menuconfig", select the 48KiB
# bootloader, and enable "Serial for communication" and select the "on USART1 PA10/PA9"

# The "make flash" command does not work on the TWO TREES T1. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "mks_skipr.bin" on an SD card and then restart the
# TWO TREES T1 with that SD card.

# See docs/Config_Reference.md for a description of parameters.


[include moonraker_obico_macros.cfg]
[include timelapse.cfg]
# [include nozzle_clean.cfg]
#####################################################################
# gcode_macro
#####################################################################

[virtual_sdcard]
path: ~/gcode_files 
#/home/mks/printer_data/gcodes

[display_status]

[pause_resume]

[respond]

[gcode_macro QUERY_SHAPER] 
gcode:
  M118 {printer.configfile.settings['input_shaper'].shaper_freq_x} {printer.configfile.settings['input_shaper'].shaper_freq_y}

[gcode_macro QUERY_ZOFFSET] 
gcode:
  M118 {printer.configfile.settings['probe'].z_offset}

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    BED_MESH_PROFILE LOAD=default

[gcode_macro G29]
gcode:
    BED_MESH_CALIBRATE

[homing_override]
set_position_z:0
gcode: 
    G91 
    G1 Z5 F300
    G4 P1000
    {% set HOME_CUR = 0.60 %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_x'] %}
    {% set RUN_CUR = driver_config.run_current %}
    SET_VELOCITY_LIMIT ACCEL=500
      # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
    G4 P100
      # G28 X0 homing
    {% if params.X is defined %}
    {% if params.Y is undefined %}
    {% if params.Z is undefined %}
    G28 X 
    G4 P1000
    G1 X10 F1000
    G4 P2000
    {% endif %}
    {% endif %}
    {% endif %}
      # G28 Y0 homing
    {% if params.Y is defined %}
    {% if params.X is undefined %}
    {% if params.Z is undefined %}
    G28 Y 
    G4 P1000
    G1 Y-10 F1000
    G4 P1000
    {% endif %}
    {% endif %}
    {% endif %}
      # G28 Z0 homing
    {% if params.X is undefined %}
    {% if params.Y is undefined %}
    {% if params.Z is defined %}
    G28 X 
    G4 P500
    G1 X10 F1000
    G4 P2000

    G28 Y 
    G4 P1000
    G1 Y-10 F1000
    G4 P1000

    G90
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR}
    SET_VELOCITY_LIMIT ACCEL=10000
    G4 P100
    G1 X128 Y128 F18000
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
    SET_VELOCITY_LIMIT ACCEL=500
    G4 P100
    G91

    G28 Z
    G1 Z10

    #####Z_TILT
    G90
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR}
    SET_VELOCITY_LIMIT ACCEL=10000
    G4 P100
    Z_TILT_ADJUST
    G1 X128 Y128 F18000
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
    SET_VELOCITY_LIMIT ACCEL=500
    G4 P100
    G91
    #####Z_TILT
    G28 Z
    G1 Z10
    {% endif %}
    {% endif %}
    {% endif %}
      # G28 X0 Y0 homing
    {% if params.X is defined %}
    {% if params.Y is defined %}
    {% if params.Z is undefined %}
    G28 X 
    G4 P500
    G1 X10 F1000
    G4 P2000

    G28 Y 
    G4 P1000
    G1 Y-10 F1000
    G4 P1000
    {% endif %}
    {% endif %}
    {% endif %}
      # G28 homing
    {% if params.X is undefined %}
    {% if params.Y is undefined %}
    {% if params.Z is undefined %}
    G28 X 
    G4 P500
    G1 X10 F1000
    G4 P2000

    G28 Y 
    G4 P1000
    G1 Y-10 F1000
    G4 P1000

    G90
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR}
    SET_VELOCITY_LIMIT ACCEL=10000
    G4 P100
    G1 X128 Y128 F18000
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
    SET_VELOCITY_LIMIT ACCEL=500
    G4 P100
    G91

    G28 Z
    G1 Z10
    
    #####Z_TILT
    G90
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR}
    SET_VELOCITY_LIMIT ACCEL=10000
    G4 P100
    Z_TILT_ADJUST
    G1 X128 Y128 F18000
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
    SET_VELOCITY_LIMIT ACCEL=500
    G4 P100
    G91
    #####Z_TILT
    G28 Z
    G1 Z10
    {% endif %}
    {% endif %}
    {% endif %} 
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR}
    SET_VELOCITY_LIMIT ACCEL=20000
    G90


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
variable_pause_filsw:0
gcode:
    {% if printer["print_stats"].state == "standby" %}
        M118 {"Cannot pause, in a standby state"}
    {% else %}
        {% if pause_filsw %}
            M118 {"Cannot pause,in a paused state."}
        {% else %}
            PRINTER_STATUS
            M400 
            {% set current_temp = printer.extruder.temperature %}
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=resume_extmp VALUE={current_temp}
            SET_GCODE_VARIABLE MACRO=LOAD_MATERIAL VARIABLE=saved_extmp VALUE={current_temp}
            SET_GCODE_VARIABLE MACRO=UNLOAD_MATERIAL VARIABLE=unsaved_extmp VALUE={current_temp}
            {% set current_bed = printer["heater_bed"].temperature %}
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=resume_betmp VALUE={current_bed}
            {% set z = params.Z|default(10)|int %}                                                   
            {% set e = params.E|default(2.5) %} 
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                             
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}   

            SAVE_GCODE_STATE NAME=PAUSE                                                                  
            M25    
            G91
            M83     
            G1 E-{e} F2100                                                                     
            {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}           
                G1 Z{z} F900                                                                     
            {% else %}
                SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
            {% endif %}
            G90                                                                                  
            G1 X10 Y220 F6000
            G1 E{e} F2100	

            SET_PIN PIN=BUZ VALUE=0.2
            G4 P600
            SET_PIN PIN=BUZ VALUE=0

            SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=pause_filsw VALUE=1
            SET_IDLE_TIMEOUT TIMEOUT=43200        #12h
        {% endif %}
    {% endif %}


[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_resume_extmp: 240
variable_resume_betmp: 60
variable_zhop: 0
variable_etemp: 0
gcode:
    {% if printer["print_stats"].state == "paused" %}
        PRINTER_STATUS
        M109 S{resume_extmp}
        M140 S{resume_betmp}

        SET_PIN PIN=BUZ VALUE=0.2
        G4 P600
        SET_PIN PIN=BUZ VALUE=0

        {% set e = params.E|default(2.5)|int %}                                          
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
        G91                                                                               
        M83
        G1 E-{e} F900		
        G1 Z{zhop * -1} F900
        G1 E{e+0.5} F900	  
        M400
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60 
        M24
        SET_FILAMENT_SENSOR SENSOR=fila ENABLE=1
        SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=pause_filsw VALUE=0
    {% else %}
        M118 {"Cannot resume, not in a paused state"}
    {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    {% if printer["print_stats"].state == "standby" %}
        M118 {"Cannot cancel,in a standby state"}
    {% else %}
        PRINTER_STATUS
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} 
        SDCARD_RESET_FILE
        M400 							            ; wait for buffer to clear
        G92 E0 							          ; zero the extruder
        G1 E-1.0 F1200 				      ; retract filament
        {% if (printer.gcode_move.position.z + 100) < printer.toolhead.axis_maximum.z %}  
            G1 Z{printer.gcode_move.position.z + 100.0} F600
        {% endif %}
    
        TURN_OFF_HEATERS
        M107 
        Side_fan_Off
        Filter_fan_Off							            ; turn off fan
        G28 X0 Y0
        M84

        INVERT
        SET_PIN PIN=BUZ VALUE=0.2
        G4 P600
        SET_PIN PIN=BUZ VALUE=0
        INVERT

        SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=pause_filsw VALUE=0
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=resume_extmp VALUE=240
        SET_GCODE_VARIABLE MACRO=LOAD_MATERIAL VARIABLE=saved_extmp VALUE=240
        SET_GCODE_VARIABLE MACRO=UNLOAD_MATERIAL VARIABLE=unsaved_extmp VALUE=240
    {% endif %}

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}

    M107                        ; Turn off fan
    G21                         ; Set units to millimeters
    G90                         ; Absolute coordinates
    M83                         ; Relative extrusion

    ; ====================================================
    ; Initial heating
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
    
    ; Wait for temperatures
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP}

    ; ====================================================
    ; Initial setup
    G1 E-1.5 F2100              ; Initial retraction
    G28                         ; Home all axes
    CLEAN_NOZZLE TEMP={EXTRUDER_TEMP}  ; Chamada do macro de limpeza (add-on)
    BED_MESH_CALIBRATE PROFILE=default  ; Use default bed leveling profile

    ; ====================================================
    ; Purge lines
    G0 Z2.0 F600
    G0 X50 Y10 F12000

    G92 E0                      ; Reset extruder
    G0 Z0.4 F600
    G1 X100.0 E10 F3000.0       ; First purge line
    G92 E0                      ; Reset extruder
    G1 X200.0 E15 F3000.0       ; Second purge line
    
    ; ====================================================
    ; Cleaning routine
    G0 Z0.8 F600
    G1 Z0.4 F600                ; Z preparation
    G0 Y12 F6000                ; Cleaning movement
    G1 X100 F6000
    G0 Y8 F12000
    G1 X200 F6000
    G1 X190 Y12 F6000
    G1 X180 Y8 F6000
    G1 X170 Y12 F6000
    G1 X160 Y8 F6000
    G1 X150 Y12 F6000

    ; ====================================================
    ; Final reset
    G92 E0                      ; Reset extruder
    G90                         ; Switch back to absolute

[gcode_macro END_PRINT]
gcode:
    {% set X_MAX = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set Y_MAX = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set Z_MAX = printer.configfile.config["stepper_z"]["position_max"]|float %}
    {% set CURRENT_Z = printer.toolhead.position.z|float %}
    {% set KINEMATICS = printer.configfile.config["printer"]["kinematics"]|default("cartesian")|string %}

    ; ====================================================
    ; Final Retraction Sequence
    SET_PIN PIN=caselight VALUE=1.00  # Turn on the case light
    G91                     ; Relative positioning
    G1 E-2 F2700            ; Retract 2mm @45mm/s
    G1 E-1.5 Z1 F2400       ; Partial unretract + small Z lift
    G1 X5 Y5 F6000          ; Small XY adjustment
    G1 Z10                  ; Additional Z lift
    G90                     ; Absolute positioning

    ; ====================================================
    ; Kinematic-Specific Present Position
    {% if KINEMATICS == "delta" %}
        G1 Z{Z_MAX * 0.8} F600   ; Delta safe height
        G1 X0 Y0 F6000           ; Center position

    {% elif KINEMATICS == "corexy" %}
        {% if CURRENT_Z <= (Z_MAX - 100) %}
            G1 Z{CURRENT_Z + 100} F600  ; 100mm above current
        {% else %}
            G1 Z{Z_MAX} F600            ; Max Z if near top
        {% endif %}
        G1 X{X_MAX/2} Y{Y_MAX - 10} F2500  ; Front-center

    {% else %}
        {% if CURRENT_Z <= (Z_MAX * 0.2) %}
            G1 Z{Z_MAX * 0.2} F600       ; 20% height
        {% elif CURRENT_Z < Z_MAX %}
            G1 Z{CURRENT_Z + 10} F600    ; 10mm lift
        {% endif %}
        G1 X{X_MAX/2} Y{Y_MAX - 10} F6000  ; Front-center
    {% endif %}

    ; ====================================================
    ; Thermal Shutdown Sequence
    M140 S0                  ; Turn off bed heater
    M104 S0                  ; Turn off extruder heater
    M106 P2                  ; Turn on Side Fan to Help freeze heat bed

    M84                       ; Disable steppers


    ; ====================================================
    ; Delayed Filter Fan Shutdown
    G4 P10000                ; 10s pause
    SET_PIN PIN=BUZ VALUE=0.2  ; Completion beep
    G4 P1200
    SET_PIN PIN=BUZ VALUE=0
    M107 P3                  ; Filter Fan off after delay

    ; ====================================================
    ; Hotend Fan Control by Temperature
    TEMPERATURE_WAIT SENSOR=extruder MAXIMUM=100  ; Wait until extruder <100°C
    M107 P0                  ; Hotend Fan off

    TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM=60
    M107 P2                  ; SIDE FAN off

    ; ====================================================
    ; Final Safety Protocol

    M117 Print Completed      ; Display notification
    SAVE_AT_END               ; Custom save routine



    
    
[gcode_macro Side_fan_On]
gcode:
     SET_PIN PIN=Side_fan VALUE=255

[gcode_macro Side_fan_Off]
gcode:
     SET_PIN PIN=Side_fan VALUE=0

[gcode_macro Filter_fan_On]
gcode:
     SET_PIN PIN=Filter_fan VALUE=255

[gcode_macro Filter_fan_Off]
gcode:
     SET_PIN PIN=Filter_fan VALUE=0


[gcode_macro INVERT]
gcode:
    {% if printer["output_pin caselight"].value == 0 %}
        SET_PIN PIN=caselight VALUE=1
    {% else %}
        SET_PIN PIN=caselight VALUE=0
    {% endif %}

[gcode_macro PUSH]
gcode:
    M400
    M83
    G1 E180 F300 
    M400

[gcode_macro LOAD_MATERIAL]
variable_saved_extmp: 240
gcode:
    SAVE_GCODE_STATE NAME=recovery_state
    {% set current_temp = printer.extruder.temperature %}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={current_temp}
    {% if printer.extruder.temperature < 180 %}
        M109 S240
    {% endif %}
    PUSH
    RESTORE_GCODE_STATE NAME=recovery_state

    PRINTER_STATUS
    {% if printer["print_stats"].state == "paused" %}
        M104 S{saved_extmp}
    {% else %}
        M104 S0
    {% endif %}

[gcode_macro UNLOAD_MATERIAL]
variable_unsaved_extmp: 240
gcode:
    SAVE_GCODE_STATE NAME=recovery_state
    {% set current_temp = printer.extruder.temperature %}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={current_temp}
    {% if printer.extruder.temperature < 180 %}
        M109 S240
    {% endif %}
    M83
    G1 E100 F300 
    
    INVERT
    G4 P20000
    INVERT

    M83
    G1 E-30 F30
    M83
    G1 E-20 F1800
    M83
    G1 E-30 F300
    M400
  
    RESTORE_GCODE_STATE NAME=recovery_state

    PRINTER_STATUS
    {% if printer["print_stats"].state == "paused" %}
        M104 S{unsaved_extmp}
    {% else %}
        M104 S0
    {% endif %}

[filament_switch_sensor fila]
pause_on_runout: True
insert_gcode:
    PRINTER_STATUS
    INVERT
    SET_PIN PIN=BUZ VALUE=0.2
    G4 P600
    SET_PIN PIN=BUZ VALUE=0
    INVERT
runout_gcode:
    PRINTER_STATUS
    INVERT
    SET_PIN PIN=BUZ VALUE=0.3
    G4 P3600
    SET_PIN PIN=BUZ VALUE=0
    INVERT
    {% if printer["print_stats"].state == "paused"%}
        SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=pause_filsw VALUE=1
        {% set current_temp = printer.extruder.temperature %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=resume_extmp VALUE={current_temp}
        SET_GCODE_VARIABLE MACRO=LOAD_MATERIAL VARIABLE=saved_extmp VALUE={current_temp}
        SET_GCODE_VARIABLE MACRO=UNLOAD_MATERIAL VARIABLE=unsaved_extmp VALUE={current_temp}
    {% endif %}
event_delay: 3.0
pause_delay: 1
switch_pin: !MKS_THR:gpio29


[gcode_macro M106]
gcode:
    {% if 'P' in params %}
        {% if params.P|int == 0 %}
            {% set speed = params.S|default(255)|float / 255 %}
            SET_FAN_SPEED FAN=Fan SPEED={speed}        ; Hotend cooling fan ([fan])
        {% elif params.P|int == 1 %}
            {% set speed = params.S|default(255)|float / 255 %}
            SET_FAN_SPEED FAN=Side_fan SPEED={speed}  ; Side fan
        {% elif params.P|int == 2 %}
            {% set speed = params.S|default(255)|float / 255 %}
            SET_FAN_SPEED FAN=Filter_fan SPEED={speed} ; Filter fan
        {% else %}
            RESPOND TYPE=error MSG="Invalid P value for M106"
        {% endif %}
    {% else %}
        {% set speed = params.S|default(255)|float / 255 %}
        SET_FAN_SPEED FAN=Fan SPEED={speed}            ; Default to P0 (Hotend cooling fan)
    {% endif %}

[gcode_macro M107]
gcode:
    {% if 'P' in params %}
        {% if params.P|int == 0 %}
            SET_FAN_SPEED FAN=Fan SPEED=0              ; Turn off hotend cooling fan
        {% elif params.P|int == 1 %}
            SET_FAN_SPEED FAN=Side_fan SPEED=0         ; Turn off side fan
        {% elif params.P|int == 2 %}
            SET_FAN_SPEED FAN=Filter_fan SPEED=0       ; Turn off filter fan
        {% else %}
            RESPOND TYPE=error MSG="Invalid P value for M107"
        {% endif %}
    {% else %}
        SET_FAN_SPEED FAN=Fan SPEED=0                  ; Default to P0 (Hotend cooling fan)
    {% endif %}






[gcode_macro PRINTER_STATUS]
gcode:    
    M118 {"------PRINTER_STATUS------"}
    M118 {printer["print_stats"].state}
    M118 {"--------------------------"}
    # M118 {printer.gcode_move.position.z}